name: Release
on:
  push:
    tags:
      - v*
jobs:
  release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: psh ${{ github.ref }}
          draft: false
          prerelease: false
  linuxbuild:
    name: build psh
    needs: release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17.2
      - name: build linux version
        run: make psh
      - name: package
        run: tar -zcvf psh_linux.tgz bin/psh
      - name: upload
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: psh_linux.tgz
          asset_name: psh_linux.tgz
          asset_content_type: application/gzip
#
#  windowsbuild:
#    runs-on: windows-latest
#    needs: release
#    steps:
#      - uses: actions/checkout@v2
#      - name: Set up Go
#        uses: actions/setup-go@v2
#        with:
#          go-version: 1.15
#      - name: build windows version
#        run: go build -v -o gocapture_windows.exe ./...
#      - name: package
#        run: tar -zcvf gocapture_windows.tgz gocapture_windows.exe static templates GeoLite2-City.mmdb
#      - name: upload
#        uses: actions/upload-release-asset@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          upload_url: ${{ needs.release.outputs.upload_url }}
#          asset_path: gocapture_windows.tgz
#          asset_name: gocapture_windows.tgz
#          asset_content_type: application/gzip