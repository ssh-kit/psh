name: Release
on:
  push:
    tags:
      - v*
jobs:
  release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: psh ${{ github.ref }}
          draft: false
          prerelease: false
  linux_build:
    name: build psh
    needs: release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Package Version
        env:
          BASE_PACKAGE_NAME: github.com/ssh-kit/psh
          DEFAULT_LDFLAGS: -X ${{ BASE_PACKAGE_NAME }}.Version=${{ github.ref }}
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17.2
      - name: build linux version
        run: go build -v -ldflags=${{ DEFAULT_LDFLAGS }} -o bin/psh ./cmd/psh
      - name: package
        run: mv template/psh.yaml bin/psh.yaml && tar -zcvf psh_linux_x64.tgz -C bin .
      - name: upload
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: psh_linux_x64.tgz
          asset_name: psh_linux_x64.tgz
          asset_content_type: application/gzip
  windows_build:
    runs-on: windows-latest
    needs: release
    steps:
      - uses: actions/checkout@v2
      - name: Package Version
        env:
          BASE_PACKAGE_NAME: github.com/ssh-kit/psh
          DEFAULT_LDFLAGS: -X ${{ BASE_PACKAGE_NAME }}.Version=${{ github.ref }}
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17.2
      - name: build windows version
        run: go build -v -ldflags=${{ DEFAULT_LDFLAGS }} -o bin/psh.exe ./cmd/psh
      - name: package
        run: mv template/psh.yaml bin/psh.yaml && tar -zcvf psh_windows_x64.tgz -C bin .
      - name: upload
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: psh_windows_x64.tgz
          asset_name: psh_windows_x64.tgz
          asset_content_type: application/gzip
  macos_build:
    name: build psh
    needs: release
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - name: Package Version
        env:
          BASE_PACKAGE_NAME: github.com/ssh-kit/psh
          DEFAULT_LDFLAGS: -X ${{ BASE_PACKAGE_NAME }}.Version=${{ github.ref }}
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17.2
      - name: build macos version
        run: go build -v -ldflags=${{ DEFAULT_LDFLAGS }} -o bin/psh ./cmd/psh
      - name: package
        run: mv template/psh.yaml bin/psh.yaml && tar -zcvf psh_macos_x64.tgz -C bin .
      - name: upload
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: psh_macos_x64.tgz
          asset_name: psh_macos_x64.tgz
          asset_content_type: application/gzip
